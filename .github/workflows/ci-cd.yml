name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build Docker image?'
        required: false
        default: 'true'
      operation:
        description: 'install | uninstall | reinstall'
        required: false
        default: 'reinstall'

env:
  REGISTRY: ghcr.io/TwojUser
  IMAGE_NAME: discord-film-bot

  # --- tutaj dodajemy Twoje sekrety z GitHub Secrets ---
  DISCORD_TOKEN:   ${{ secrets.DISCORD_TOKEN }}
  TMDB_API_KEY:    ${{ secrets.TMDB_API_KEY }}
  MYSQL_HOST:      ${{ secrets.MYSQL_HOST }}
  MYSQL_DATABASE:  ${{ secrets.MYSQL_DATABASE }}
  MYSQL_USER:      ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD:  ${{ secrets.MYSQL_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
    steps:
      – … # testy

  build:
    needs: test
    runs-on: ubuntu-latest        # <- usuwamy 'if'
    steps:
      – uses: actions/checkout@v3
      – name: Build image
        run: docker build -t $REGISTRY/$IMAGE_NAME:latest .
      – name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      – name: Push image
        run: docker push $REGISTRY/$IMAGE_NAME:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest        # <- tu też usuwamy 'if' (albo zostawiamy, jeśli chcemy ręczny deploy)
    steps:
      – name: Deploy via SSH
        run: |
          ssh user@server "cd /path/to/project && \
            docker-compose pull && \
            docker-compose up -d"

