name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build Docker image?'
        required: false
        default: 'true'
      operation:
        description: 'install | uninstall | reinstall'
        required: false
        default: 'reinstall'

permissions:
  contents: read
  packages: write

env:
  REGISTRY:        ghcr.io/kuba088fr
  IMAGE_NAME:      discord-film-bot
  DISCORD_TOKEN:   ${{ secrets.DISCORD_TOKEN }}
  TMDB_API_KEY:    ${{ secrets.TMDB_API_KEY }}
  MYSQL_HOST:      ${{ secrets.MYSQL_HOST }}
  MYSQL_DATABASE:  ${{ secrets.MYSQL_DATABASE }}
  MYSQL_USER:      ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD:  ${{ secrets.MYSQL_PASSWORD }}
  AZURE_VM_IP:     ${{ secrets.AZURE_VM_IP }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir pytest pytest-asyncio black
      - name: Lint
        run: black --check .
      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t $REGISTRY/$IMAGE_NAME:latest .
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        run: docker push $REGISTRY/$IMAGE_NAME:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    # Ustawiamy OPERATION: jeśli workflow_dispatch poda `operation`, to ją weźmiemy,
    # a w pozostałych wypadkach (push) OPERATION='reinstall'
    env:
      OPERATION: ${{ github.event.inputs.operation || 'reinstall' }}
    steps:
      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "$SSH_KNOWN_HOSTS"  > ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          case "$OPERATION" in
            install)
              ssh -i ~/.ssh/id_ed25519 azureuser@$AZURE_VM_IP \
                "cd /home/azureuser/discord-bot && docker-compose up -d"
              ;;
            uninstall)
              ssh -i ~/.ssh/id_ed25519 azureuser@$AZURE_VM_IP \
                "cd /home/azureuser/discord-bot && docker-compose down"
              ;;
            reinstall)
              ssh -i ~/.ssh/id_ed25519 azureuser@$AZURE_VM_IP \
                "cd /home/azureuser/discord-bot && \
                 docker-compose down && \
                 docker-compose pull && \
                 docker-compose up -d"
              ;;
            *)
              echo "Unknown operation: $OPERATION"
              exit 1
              ;;
          esac
